services:
  postgres:
    container_name: 'order-postgres'
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=${PG_DB}'
      - 'POSTGRES_USER=${PG_USER}'
      - 'POSTGRES_PASSWORD=${PG_PASSWORD}'
    ports:
      - '${PG_PORT}:5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 15
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: 'order-backend'
    build:
      context: backend
      dockerfile: src/Web/Dockerfile
    ports:
      - '${API_PORT}:8080'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: 'order-frontend'
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - '${WEB_PORT}:8081'
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_data:
